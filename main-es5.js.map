{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/app/services/track-statistics-search.service.ts","webpack:///src/app/track-info/track-info.component.ts","webpack:///src/app/track-info/track-info.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","path","component","pathMatch","declarations","providers","bootstrap","HomeComponent","trackStatisticsSearchService","formBuilder","currentPage","pageSize","availableParallelizationItems","availableItemsPerPage","isLoading","allTracksCount","handledTracksCount","searchProfile","group","userName","required","pattern","nullValidator","itemsInParallel","itemsPerPage","userNameControl","get","itemsInParallelControl","itemsPerPageControl","errorMessage","infoMessage","pageNumber","value","tracksPage","console","log","getTracksPage","pipe","page","totalTracksCount","total_hits","matches","length","recordsObservables","map","track","name","r","isOnFirstPage","some","match","author_username","Record","published_at","url","err","numberOfObjects","groupedProducts","reduce","resultArray","item","index","chunkIndex","Math","floor","push","records","i","p","concat","tr","Page","subscribe","result","slice","sort","a","b","Date","publishedAt","getTime","notFirstPage","filter","rec","nonTrendingTracksCount","error","status","getNextPageResults","totalHits","trackName","trackUrl","SearchComponent","composeResult","TrackStatisticsSearchService","httpClient","username","headers","ENVATO_KEY","response","TrackSearchResponse","term","params","append","TracksPageResponse","TracksPageLinksResponse","author","TotalMatchesResponse","TermSearchResult","TrackSearchResult","TrackInfoComponent","record","x","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'mrk-audj';\r\n}\r\n","<body>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { TrackStatisticsSearchService } from './services/track-statistics-search.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { TrackInfoComponent } from './track-info/track-info.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SearchComponent,\r\n    HomeComponent,\r\n    TrackInfoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' }\r\n    ])\r\n  ],\r\n  providers: [TrackStatisticsSearchService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { forkJoin, Observable, of, throwError } from 'rxjs';\r\nimport { catchError, map, mergeMap } from 'rxjs/operators';\r\nimport { TrackStatisticsSearchService } from '../services/track-statistics-search.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  public tracksPage: Page;\r\n\r\n  public totalTracksCount: number;\r\n  public currentPage: number = 1;\r\n  public pageSize: number = 30;\r\n  public availableParallelizationItems: Array<number> = [1,2,3,4,5,6,7,8,9,10];\r\n  public availableItemsPerPage: Array<number> = [10, 30, 50, 100];\r\n\r\n  private userNameControl: AbstractControl;\r\n  private itemsInParallelControl: AbstractControl;\r\n  private itemsPerPageControl: AbstractControl;\r\n  public searchProfile: FormGroup;\r\n\r\n  public errorMessage: string;\r\n  public infoMessage: string;\r\n\r\n  public isLoading: boolean = false;\r\n\r\n  public allTracksCount: number = 0;\r\n  public handledTracksCount: number = 0;\r\n\r\n  public usernameExists: string;\r\n\r\n  constructor(\r\n    private trackStatisticsSearchService: TrackStatisticsSearchService,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.searchProfile = this.formBuilder.group({\r\n      userName: [null, [Validators.required, Validators.pattern('[^\\w]'), Validators.nullValidator]],\r\n      itemsInParallel: [null],\r\n      itemsPerPage: [null],\r\n    });\r\n\r\n    this.userNameControl =  this.searchProfile.get('userName');\r\n    this.itemsInParallelControl =  this.searchProfile.get('itemsInParallel');\r\n    this.itemsPerPageControl =  this.searchProfile.get('itemsPerPage');\r\n\r\n    this.errorMessage = \"\";\r\n    this.infoMessage = \"\";\r\n    this.allTracksCount = 0;\r\n    this.handledTracksCount = 0;\r\n  }\r\n\r\n  public getNextPageResults(pageNumber: number) : void {\r\n    let userName = this.userNameControl.value;\r\n    let itemsInParallel = this.itemsInParallelControl.value || 3;\r\n\r\n    this.pageSize = this.itemsPerPageControl.value || 30;\r\n    this.allTracksCount = 0;\r\n    this.handledTracksCount = 0;\r\n    this.errorMessage = '';\r\n    this.infoMessage = '';\r\n    this.isLoading = true;\r\n    this.tracksPage = null;\r\n\r\n    console.log(`Page size ${this.pageSize}`);\r\n\r\n    this.trackStatisticsSearchService.getTracksPage(userName, pageNumber, this.pageSize)\r\n      .pipe(mergeMap(page => {\r\n      \r\n        this.totalTracksCount = page.total_hits;\r\n        this.allTracksCount = page.matches.length;\r\n\r\n        let recordsObservables = page.matches.map(track => {\r\n\r\n          return this.trackStatisticsSearchService.searchProfile(track.name, 1, 30)\r\n          .pipe(map(r => {\r\n        \r\n            this.handledTracksCount++;\r\n      \r\n            let isOnFirstPage = r.matches.some(match => match.author_username == track.author_username && match.name == track.name);\r\n        \r\n            return new Record(track.id, track.name, track.published_at, track.url, isOnFirstPage);\r\n          }), catchError(err => {\r\n            this.errorMessage = 'Забагато запитів. Спробуйте пізніше, зменшивши кількість одночасних запитів і кількість треків на сторінці';\r\n            return throwError(err);\r\n          }));\r\n        });\r\n      \r\n        console.log(`Items in parallel: ${itemsInParallel}`);\r\n\r\n        let numberOfObjects = itemsInParallel; // <-- decides number of objects in each group\r\n      \r\n        let groupedProducts = recordsObservables.reduce((resultArray: Observable<Record>[][], item: Observable<Record>, index: number) => { \r\n          \r\n          const chunkIndex = Math.floor(index/numberOfObjects);\r\n      \r\n          if(!resultArray[chunkIndex]) {\r\n            resultArray[chunkIndex] = []; // start a new chunk\r\n          }\r\n      \r\n          resultArray[chunkIndex].push(item);\r\n      \r\n          return resultArray;\r\n        }, []);\r\n      \r\n        let records = forkJoin(groupedProducts[0]);\r\n      \r\n        for (let i = 1; i < groupedProducts.length; i++){\r\n          records = records.pipe(mergeMap(r => forkJoin(groupedProducts[i]).pipe(map(p => p.concat(r)))));\r\n        }\r\n      \r\n        return records.pipe(map(tr => {\r\n          return new Page(page.total_hits, tr);\r\n        }));\r\n      }), catchError(err => {\r\n        console.log('Error during fetching user tracks ', err);\r\n        this.errorMessage = 'Забагато запитів. Спробуйте пізніше';\r\n        return throwError(err);\r\n    }))\r\n      .subscribe(result => {\r\n        this.isLoading = false;\r\n\r\n        result.records = result.records.slice().sort((a, b) => new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime());\r\n\r\n        let notFirstPage = result.records.filter(rec => rec.isOnFirstPage == false);\r\n\r\n        let allTracksCount = result.records.length;\r\n        let nonTrendingTracksCount = notFirstPage.length;\r\n\r\n        if (allTracksCount != nonTrendingTracksCount)\r\n          this.infoMessage = `Не на першій сторінці пошуку: ${nonTrendingTracksCount} із ${allTracksCount}`;\r\n  \r\n          this.currentPage = pageNumber;\r\n          this.tracksPage = result;\r\n      }, error => {\r\n\r\n        this.isLoading = false;\r\n\r\n        if (error.status == 404)\r\n          this.errorMessage = 'Сторінка не знайдена';\r\n  \r\n        if (error.status >= 400)\r\n          this.errorMessage = 'Щось пішло не так. Спробуйте пізніше';\r\n  \r\n        this.tracksPage = null;\r\n    });\r\n  }\r\n}\r\n\r\nexport class Page {\r\n  totalHits: number;\r\n  records: Record[];\r\n\r\n  constructor(totalHits: number, records: Record[]){\r\n    this.totalHits = totalHits;\r\n    this.records = records;\r\n  }\r\n}\r\n\r\nexport class Record {\r\n  id: number;\r\n  trackName: string;\r\n  publishedAt: string;\r\n  trackUrl: string;\r\n  isOnFirstPage: boolean;\r\n\r\n  constructor(id: number, trackName: string, publishedAt: string, trackUrl: string, isOnFirstPage: boolean){\r\n    this.id = id;\r\n    this.trackName = trackName;\r\n    this.publishedAt = publishedAt;\r\n    this.trackUrl = trackUrl;\r\n    this.isOnFirstPage = isOnFirstPage;\r\n  }\r\n}","<div class=\"col mt-3\">\r\n    <div class=\"row\">\r\n      <form>\r\n        <div class=\"form-group\" [formGroup]=\"searchProfile\">\r\n          <label for=\"profile-search\">Ім'я користувача</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"profile-search\" placeholder=\"Наприклад, ToucanMusic\" formControlName=\"userName\" [autofocus] [(ngModel)]=\"usernameExists\">\r\n        </div>\r\n        <div class=\"form-group\" [formGroup]=\"searchProfile\">\r\n          <label for=\"parallel-dropdown\">Кількість одночасних запитів</label>\r\n          <div class=\"dropdown\" id=\"parallel-dropdown\">\r\n            <select class=\"form-control\" formControlName=\"itemsInParallel\">\r\n              <option *ngFor=\"let item of availableParallelizationItems\" \r\n                [selected]=\"item == 3\">{{item}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [formGroup]=\"searchProfile\">\r\n          <label for=\"items-per-page-dropdown\">Кількість треків на сторінці</label>\r\n          <div class=\"dropdown\" id=\"items-per-page-dropdown\">\r\n            <select class=\"form-control\" formControlName=\"itemsPerPage\">\r\n              <option *ngFor=\"let item of availableItemsPerPage\" \r\n                [selected]=\"item == 30\">{{item}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [formGroup]=\"searchProfile\">\r\n          <button \r\n              class=\"btn c-btn-input my-2 my-sm-0\" \r\n              (click)=\"getNextPageResults(1)\"\r\n              [disabled]=\"!usernameExists || usernameExists.trim().length <= 0\">Пошук</button>\r\n        </div>\r\n        <div *ngIf=\"errorMessage\" class=\"alert alert-danger row\" role=\"alert\">\r\n          {{errorMessage}}\r\n        </div>\r\n        <div *ngIf=\"infoMessage\" class=\"alert alert-warning row\" role=\"alert\">\r\n          {{infoMessage}}\r\n        </div>\r\n        <div *ngIf=\"isLoading\">\r\n          <p>Отримання даних. Це може зайняти декілька хвилин</p>\r\n          <p>Опрацьовано {{handledTracksCount}} із {{allTracksCount}}</p>\r\n          <div class=\"spinner\">\r\n            <div class=\"bounce1\"></div>\r\n            <div class=\"bounce2\"></div>\r\n            <div class=\"bounce3\"></div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n      \r\n    <div *ngIf=\"tracksPage\" class=\"mt-3\">\r\n\r\n      <table class='table table-striped' aria-labelledby=\"tableLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Трек</th>\r\n            <th>Лінк</th>\r\n            <th style=\"text-align: center\">На першій сторінці?</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let record of tracksPage.records\">\r\n            <td>\r\n              {{record.trackName}}\r\n            </td>\r\n            <td>\r\n              <a href=\"{{ record.trackUrl }}\" target=\"_blank\">{{record.trackUrl}}</a>\r\n            </td>\r\n            <td style=\"text-align: center\">\r\n              <i *ngIf=\"record.isOnFirstPage\" class=\"fa fa-check-circle itemsuccess\"></i>\r\n              <i *ngIf=\"!record.isOnFirstPage\" class=\"fa fa-times-circle itemfail\"></i>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>  \r\n      <ngb-pagination \r\n      [collectionSize]=\"totalTracksCount\" \r\n      [(page)]=\"currentPage\" \r\n      [pageSize]=\"pageSize\"\r\n      aria-label=\"Default pagination\"\r\n      [boundaryLinks]=\"true\"\r\n      [maxSize]=\"10\"\r\n      (pageChange)=\"getNextPageResults($event)\"></ngb-pagination> \r\n    </div>\r\n  </div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, Validators, AbstractControl, FormGroup } from '@angular/forms';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { TrackStatisticsSearchService, TrackSearchResponse, TracksPageResponse } from '../services/track-statistics-search.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  //@Output('userChange') userChangeEmitter: EventEmitter<Page> = new EventEmitter<Page>();\r\n\r\n  private userNameControl: AbstractControl;\r\n  public searchProfile: FormGroup;\r\n\r\n  public errorMessage: string;\r\n  public infoMessage: string;\r\n\r\n  public isLoading: boolean = false;\r\n\r\n  public allTracksCount: number = 0;\r\n  public handledTracksCount: number = 0;\r\n\r\n  public usernameExists: string;\r\n\r\n  constructor(\r\n    private trackStatisticsSearchService: TrackStatisticsSearchService,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.searchProfile = this.formBuilder.group({\r\n      userName: [null, [Validators.required, Validators.pattern('[^\\w]'), Validators.nullValidator]],\r\n    });\r\n\r\n    this.userNameControl =  this.searchProfile.get('userName');\r\n\r\n    this.errorMessage = \"\";\r\n    this.infoMessage = \"\";\r\n    this.allTracksCount = 0;\r\n    this.handledTracksCount = 0;\r\n  }\r\n\r\n  public composeResult(): void {\r\n    let userName = this.userNameControl.value;\r\n\r\n    this.allTracksCount = 0;\r\n    this.handledTracksCount = 0;\r\n    this.errorMessage = '';\r\n    this.infoMessage = '';\r\n    //this.userChangeEmitter.emit(null); \r\n    this.isLoading = true;\r\n\r\n    let pageNumber = 1;\r\n    let pageSize = 100;\r\n\r\n    //////////////////\r\n\r\n    // this.trackStatisticsSearchService.getTracksPage(userName, pageNumber, pageSize)\r\n    //   .pipe(mergeMap(page => {\r\n      \r\n    //     let records = forkJoin(page.matches.map(track => {\r\n\r\n    //       return this.trackStatisticsSearchService.searchProfile(track.name, 1, 30)\r\n    //       .pipe(map(r => {\r\n\r\n    //         let isOnFirstPage = r.matches.some(match => match.author_username == track.author_username && match.name == track.name);\r\n\r\n    //         return new Record(track.id, track.name, track.url, isOnFirstPage);\r\n    //       }));\r\n    //     }));\r\n\r\n    //     let a = records.pipe(map(tr => {\r\n\r\n    //       let links = new Links(page.links.next_page_url, page.links.prev_page_url, page.links.first_page_url, page.links.last_page_url);\r\n\r\n    //       return new Page(links, page.total_hits, tr);\r\n    //     }));\r\n\r\n    //     return a;\r\n    //   }))\r\n    //   .subscribe(result => {\r\n    //     this.isLoading = false;\r\n\r\n    //     result.records = result.records.sort((a, b) => a.trackName.localeCompare(b.trackName));\r\n\r\n    //     let notFirstPage = result.records.filter(rec => rec.isOnFirstPage == false);\r\n\r\n    //     let allTracksCount = result.records.length;\r\n    //     let nonTrendingTracksCount = notFirstPage.length;\r\n\r\n    //     if (allTracksCount != nonTrendingTracksCount)\r\n    //       this.infoMessage = `Showing ${nonTrendingTracksCount} of ${allTracksCount}`;\r\n  \r\n    //       result.records = notFirstPage;\r\n\r\n    //     this.userChangeEmitter.emit(result);\r\n    //   }, error => {\r\n\r\n    //     this.isLoading = false;\r\n\r\n    //     if (error.status == 404)\r\n    //       this.errorMessage = 'Сторінка не знайдена';\r\n  \r\n    //     if (error.status >= 400)\r\n    //       this.errorMessage = 'Щось пішло не так. Спробуйте пізніше';\r\n  \r\n    //     this.userChangeEmitter.emit(null);\r\n    // });\r\n\r\n////////////////////////////\r\n\r\n\r\n    // this.trackStatisticsSearchService.getTracksPage(userName, pageNumber, pageSize)\r\n    // .pipe(mergeMap(page => {\r\n    //   let pages : Observable<TracksPageResponse>[] = new Array<Observable<TracksPageResponse>>();\r\n    //   let totalPages = Math.ceil(page.total_hits / pageSize) + 1;\r\n\r\n    //   for (let p = pageNumber + 1; p < totalPages; p++){\r\n\r\n    //     let item = this.trackStatisticsSearchService.getTracksPage(userName, p, pageSize);\r\n    //     pages.push(item);\r\n    //   }\r\n\r\n    //   return forkJoin(pages).pipe(mergeMap(c => {\r\n    //     let matches = new Array<TrackSearchResponse>().concat(...c.concat(page).map(item => item.matches));\r\n\r\n    //     this.allTracksCount = matches.length;\r\n\r\n    //     let recordsObservables = matches.map(track => {\r\n\r\n    //       return this.trackStatisticsSearchService.searchProfile(track.name, 1, 30)\r\n    //       .pipe(map(r => {\r\n  \r\n    //         this.handledTracksCount++;\r\n\r\n    //         let isOnFirstPage = r.matches.some(match => match.author_username == track.author_username && match.name == track.name);\r\n  \r\n    //         return new Record(track.id, track.name, track.url, isOnFirstPage);\r\n    //       }));\r\n    //     });\r\n\r\n    //     let numberOfObjects = 1 // <-- decides number of objects in each group\r\n\r\n    //     let groupedProducts = recordsObservables.reduce((resultArray: Observable<Record>[][], item: Observable<Record>, index: number) => { \r\n    //       const chunkIndex = Math.floor(index/numberOfObjects);\r\n\r\n    //       if(!resultArray[chunkIndex]) {\r\n    //         resultArray[chunkIndex] = []; // start a new chunk\r\n    //       }\r\n\r\n    //       resultArray[chunkIndex].push(item);\r\n\r\n    //       return resultArray;\r\n    //     }, []);\r\n\r\n    //     let records = forkJoin(groupedProducts[0]);\r\n\r\n    //     for (let i = 1; i < groupedProducts.length; i++){\r\n    //       records = records.pipe(mergeMap(r => forkJoin(groupedProducts[i]).pipe(map(p => p.concat(r)))));\r\n    //     }\r\n\r\n    //     return records.pipe(map(tr => {\r\n    //         return new Page(null, 0, tr);\r\n    //     }));\r\n    //   }));\r\n    // }))\r\n    // .subscribe(result => {\r\n    //   this.isLoading = false;\r\n\r\n    //   result.records = result.records.sort((a, b) => a.trackName.localeCompare(b.trackName));\r\n\r\n    //   console.log(`Records count: ${result.records.length}`);\r\n\r\n    //   let allTracksCount = result.records.length;\r\n    //   let notFirstPage = result.records.filter(rec => rec.isOnFirstPage == false);\r\n\r\n    //   let nonTrendingTracksCount = notFirstPage.length;\r\n\r\n    //   if (allTracksCount != nonTrendingTracksCount)\r\n    //     this.infoMessage = `Всього треків: ${allTracksCount}. Не на першій сторінці пошуку: ${nonTrendingTracksCount}`;\r\n\r\n    //     result.records = notFirstPage;\r\n\r\n    //   this.userChangeEmitter.emit(result);\r\n    // }, error => {\r\n\r\n    //   this.isLoading = false;\r\n\r\n    //   if (error.status == 404)\r\n    //     this.errorMessage = 'Сторінка не знайдена';\r\n\r\n    //   if (error.status >= 400)\r\n    //     this.errorMessage = 'Щось пішло не так. Спробуйте пізніше';\r\n\r\n    //   this.userChangeEmitter.emit(null);\r\n    // });\r\n  }\r\n}\r\n\r\n// export class Page {\r\n//   links: Links;\r\n//   totalHits: number;\r\n//   records: Record[];\r\n\r\n//   constructor(links: Links, totalHits: number, records: Record[]){\r\n//     this.links = links;\r\n//     this.totalHits = totalHits;\r\n//     this.records = records;\r\n//   }\r\n// }\r\n\r\n// export class Record {\r\n//   id: number;\r\n//   trackName: string;\r\n//   trackUrl: string;\r\n//   isOnFirstPage: boolean;\r\n\r\n//   constructor(id: number,trackName: string, trackUrl: string, isOnFirstPage: boolean){\r\n//     this.id = id;\r\n//     this.trackName = trackName;\r\n//     this.trackUrl = trackUrl;\r\n//     this.isOnFirstPage = isOnFirstPage;\r\n//   }\r\n// }\r\n\r\n// export class Links {\r\n//   next_page_url: string;\r\n//   prev_page_url: string;\r\n//   first_page_url: string;\r\n//   last_page_url: string;\r\n\r\n//   constructor(next_page_url: string, prev_page_url: string, first_page_url: string, last_page_url: string){\r\n//     this.next_page_url = next_page_url;\r\n//     this.prev_page_url = prev_page_url;\r\n//     this.first_page_url = first_page_url;\r\n//     this.last_page_url = last_page_url;\r\n//   }\r\n// }\r\n","<form>\r\n  <div class=\"form-group\" [formGroup]=\"searchProfile\">\r\n    <label for=\"profile-search\">Ім'я користувача</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"profile-search\" placeholder=\"Наприклад, ToucanMusic\" formControlName=\"userName\" [autofocus] [(ngModel)]=\"usernameExists\">\r\n  </div>\r\n  <div class=\"form-group\" [formGroup]=\"searchProfile\">\r\n    <button \r\n        class=\"btn c-btn-input my-2 my-sm-0\" \r\n        (click)=\"composeResult()\"\r\n        [disabled]=\"!usernameExists || usernameExists.trim().length <= 0\">Пошук</button>\r\n  </div>\r\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger row\" role=\"alert\">\r\n    {{errorMessage}}\r\n  </div>\r\n  <div *ngIf=\"infoMessage\" class=\"alert alert-warning row\" role=\"alert\">\r\n    {{infoMessage}}\r\n  </div>\r\n  <div *ngIf=\"isLoading\">\r\n    <p>Отримання даних. Це може зайняти декілька хвилин</p>\r\n    <p>Опрацьовано {{handledTracksCount}} із {{allTracksCount}}</p>\r\n    <div class=\"spinner\">\r\n      <div class=\"bounce1\"></div>\r\n      <div class=\"bounce2\"></div>\r\n      <div class=\"bounce3\"></div>\r\n    </div>\r\n  </div>\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class TrackStatisticsSearchService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n    ) {\r\n    }\r\n\r\n    public getTracksPage(username: string, pageNumber: number, pageSize: number): Observable<TracksPageResponse> {\r\n        let url = `https://api.envato.com/v1/discovery/search/search/item?username=${username}&page=${pageNumber}&page_size=${pageSize}&sort_by=date&sort_direction=desc`;\r\n\r\n        let headers = {\r\n            'Authorization': `Bearer ${environment.ENVATO_KEY}`\r\n        };\r\n\r\n        return this.httpClient.get<TracksPageResponse>(url, {headers: headers});\r\n    }\r\n\r\n    public getTrackNames(username: string) : Observable<TrackSearchResponse[]> {\r\n        let url = `https://api.envato.com/v1/discovery/search/search/item?username=${username}`;\r\n\r\n        let headers = {\r\n            'Authorization': `Bearer ${environment.ENVATO_KEY}`\r\n        };\r\n\r\n        return this.httpClient.get<TrackSearchResponse[]>(url, {headers: headers})\r\n            .pipe(\r\n                map((response: any) => {\r\n                    return response.matches.map(match => new TrackSearchResponse(match.id, match.name, match.published_at, match.url, match.author_username));\r\n                }));\r\n    }\r\n\r\n    public getTotalMatches(term: string) : Observable<TotalMatchesResponse> {\r\n        var url = `https://cors-anywhere.herokuapp.com/https://audiojungle.net/shopfront-api/search?page=1&page_size=1&site=audiojungle.net&sort_by=relevance&term=${term}`;\r\n    \r\n        return this.httpClient.get<TotalMatchesResponse>(url);\r\n    }\r\n\r\n    public searchProfile(term: string, pageNumber: number, pageSize: number) : Observable<TermSearchResult> {\r\n    \r\n        var url = `https://api.envato.com/v1/discovery/search/search/item?page=${pageNumber}&page_size=${pageSize}&site=audiojungle.net&sort_by=relevance`;\r\n    \r\n        let params = new HttpParams();\r\n\r\n        if (term) {\r\n            params = params.append('term', term);\r\n        }\r\n\r\n        let headers = {\r\n            'Authorization': `Bearer ${environment.ENVATO_KEY}`\r\n        };\r\n\r\n        return this.httpClient.get<TermSearchResult>(url, { params: params, headers: headers });\r\n    }\r\n}\r\n\r\nexport class TracksPageResponse {\r\n    matches: TrackSearchResponse[];\r\n    total_hits: number;\r\n    links: TracksPageLinksResponse;\r\n}\r\n\r\nexport class TracksPageLinksResponse{\r\n    next_page_url: string;\r\n    prev_page_url: string;\r\n    first_page_url: string;\r\n    last_page_url: string;\r\n}\r\n\r\nexport class TrackSearchResponse{\r\n    id: number;\r\n    name: string;\r\n    published_at: string;\r\n    url: string;\r\n    author_username: string;\r\n\r\n    constructor(id: number, name: string, published_at: string, url: string, author: string){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.published_at = published_at;\r\n        this.url = url;\r\n        this.author_username = author;\r\n    }\r\n}\r\n\r\nexport class TotalMatchesResponse {\r\n    total_hits: number;\r\n}\r\n\r\nexport class TermSearchResult{\r\n    total_hits: number;\r\n    matches: TrackSearchResult[];\r\n}\r\n\r\nexport class TrackSearchResult{\r\n    id: number;\r\n    author_url: string;\r\n    author_username: string;\r\n    url: string;\r\n    trending: boolean;\r\n    classification: string;\r\n    description: string;\r\n    name: string;\r\n    number_of_sales: number;\r\n    price_cents: number;\r\n    tags: string[];\r\n}","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TrackStatisticsSearchService, TrackSearchResponse } from '../services/track-statistics-search.service';\r\n\r\n@Component({\r\n  selector: 'app-track-info',\r\n  templateUrl: './track-info.component.html',\r\n  styleUrls: ['./track-info.component.scss']\r\n})\r\nexport class TrackInfoComponent implements OnInit {\r\n\r\n  @Input() record: TrackSearchResponse;\r\n\r\n  public isOnFirstPage: boolean;\r\n\r\n  public errorMessage: string = '';\r\n\r\n  constructor(\r\n    private trackStatisticsSearchService: TrackStatisticsSearchService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    let pageNumber = 1;\r\n    let pageSize = 30;\r\n\r\n    this.trackStatisticsSearchService.searchProfile(this.record.name, pageNumber, pageSize).subscribe(result => {\r\n      this.isOnFirstPage = result.matches.some(x => x.author_username == this.record.author_username && x.name == this.record.name);\r\n    }, error => {\r\n      this.errorMessage = error.error;\r\n    });\r\n  }\r\n}\r\n","<td>\r\n  {{record.name}}\r\n</td>\r\n<td>\r\n  <a href=\"{{ record.url }}\" target=\"_blank\">{{record.url}}</a>\r\n</td>\r\n<td>{{isOnFirstPage}}</td>","\nexport const environment = {\n   production: false,\n   ENVATO_KEY: \"haJXHoYnavl4EZ31RVAjJPuGZ7sxvBeO\"\n};\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}