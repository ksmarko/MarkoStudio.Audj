{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/services/track-statistics-search.service.ts","./src/app/track-info/track-info.component.ts","./src/app/track-info/track-info.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'mrk-audj';\r\n}\r\n","<body>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { TrackStatisticsSearchService } from './services/track-statistics-search.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { TrackInfoComponent } from './track-info/track-info.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SearchComponent,\r\n    HomeComponent,\r\n    TrackInfoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' }\r\n    ])\r\n  ],\r\n  providers: [TrackStatisticsSearchService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { forkJoin, Observable, of, throwError } from 'rxjs';\r\nimport { catchError, map, mergeMap } from 'rxjs/operators';\r\nimport { TrackStatisticsSearchService } from '../services/track-statistics-search.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  public tracksPage: Page;\r\n\r\n  public totalTracksCount: number;\r\n  public currentPage: number = 1;\r\n  public pageSize: number = 30;\r\n  public availableParallelizationItems: Array<number> = [1,2,3,4,5,6,7,8,9,10];\r\n  public availableItemsPerPage: Array<number> = [10, 30, 50, 100];\r\n\r\n  private userNameControl: AbstractControl;\r\n  private itemsInParallelControl: AbstractControl;\r\n  private itemsPerPageControl: AbstractControl;\r\n  public searchProfile: FormGroup;\r\n\r\n  public errorMessage: string;\r\n  public infoMessage: string;\r\n\r\n  public isLoading: boolean = false;\r\n\r\n  public allTracksCount: number = 0;\r\n  public handledTracksCount: number = 0;\r\n\r\n  public usernameExists: string;\r\n\r\n  constructor(\r\n    private trackStatisticsSearchService: TrackStatisticsSearchService,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.searchProfile = this.formBuilder.group({\r\n      userName: [null, [Validators.required, Validators.pattern('[^\\w]'), Validators.nullValidator]],\r\n      itemsInParallel: [null],\r\n      itemsPerPage: [null],\r\n    });\r\n\r\n    this.userNameControl =  this.searchProfile.get('userName');\r\n    this.itemsInParallelControl =  this.searchProfile.get('itemsInParallel');\r\n    this.itemsPerPageControl =  this.searchProfile.get('itemsPerPage');\r\n\r\n    this.errorMessage = \"\";\r\n    this.infoMessage = \"\";\r\n    this.allTracksCount = 0;\r\n    this.handledTracksCount = 0;\r\n  }\r\n\r\n  public getNextPageResults(pageNumber: number) : void {\r\n    let userName = this.userNameControl.value;\r\n    let itemsInParallel = this.itemsInParallelControl.value || 3;\r\n\r\n    this.pageSize = this.itemsPerPageControl.value || 30;\r\n    this.allTracksCount = 0;\r\n    this.handledTracksCount = 0;\r\n    this.errorMessage = '';\r\n    this.infoMessage = '';\r\n    this.isLoading = true;\r\n    this.tracksPage = null;\r\n\r\n    console.log(`Page size ${this.pageSize}`);\r\n\r\n    this.trackStatisticsSearchService.getTracksPage(userName, pageNumber, this.pageSize)\r\n      .pipe(mergeMap(page => {\r\n      \r\n        this.totalTracksCount = page.total_hits;\r\n        this.allTracksCount = page.matches.length;\r\n\r\n        let recordsObservables = page.matches.map(track => {\r\n\r\n          return this.trackStatisticsSearchService.searchProfile(track.name, 1, 30)\r\n          .pipe(map(r => {\r\n        \r\n            this.handledTracksCount++;\r\n      \r\n            let isOnFirstPage = r.matches.some(match => match.author_username == track.author_username && match.name == track.name);\r\n        \r\n            return new Record(track.id, track.name, track.published_at, track.url, isOnFirstPage);\r\n          }), catchError(err => {\r\n            this.errorMessage = 'Забагато запитів. Спробуйте пізніше, зменшивши кількість одночасних запитів і кількість треків на сторінці';\r\n            return throwError(err);\r\n          }));\r\n        });\r\n      \r\n        console.log(`Items in parallel: ${itemsInParallel}`);\r\n\r\n        let numberOfObjects = itemsInParallel; // <-- decides number of objects in each group\r\n      \r\n        let groupedProducts = recordsObservables.reduce((resultArray: Observable<Record>[][], item: Observable<Record>, index: number) => { \r\n          \r\n          const chunkIndex = Math.floor(index/numberOfObjects);\r\n      \r\n          if(!resultArray[chunkIndex]) {\r\n            resultArray[chunkIndex] = []; // start a new chunk\r\n          }\r\n      \r\n          resultArray[chunkIndex].push(item);\r\n      \r\n          return resultArray;\r\n        }, []);\r\n      \r\n        let records = forkJoin(groupedProducts[0]);\r\n      \r\n        for (let i = 1; i < groupedProducts.length; i++){\r\n          records = records.pipe(mergeMap(r => forkJoin(groupedProducts[i]).pipe(map(p => p.concat(r)))));\r\n        }\r\n      \r\n        return records.pipe(map(tr => {\r\n          return new Page(page.total_hits, tr);\r\n        }));\r\n      }), catchError(err => {\r\n        console.log('Error during fetching user tracks ', err);\r\n        this.errorMessage = 'Забагато запитів. Спробуйте пізніше';\r\n        return throwError(err);\r\n    }))\r\n      .subscribe(result => {\r\n        this.isLoading = false;\r\n\r\n        result.records = result.records.slice().sort((a, b) => new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime());\r\n\r\n        let notFirstPage = result.records.filter(rec => rec.isOnFirstPage == false);\r\n\r\n        let allTracksCount = result.records.length;\r\n        let nonTrendingTracksCount = notFirstPage.length;\r\n\r\n        if (allTracksCount != nonTrendingTracksCount)\r\n          this.infoMessage = `Не на першій сторінці пошуку: ${nonTrendingTracksCount} із ${allTracksCount}`;\r\n  \r\n          this.currentPage = pageNumber;\r\n          this.tracksPage = result;\r\n      }, error => {\r\n\r\n        this.isLoading = false;\r\n\r\n        if (error.status == 404)\r\n          this.errorMessage = 'Сторінка не знайдена';\r\n  \r\n        if (error.status >= 400)\r\n          this.errorMessage = 'Щось пішло не так. Спробуйте пізніше';\r\n  \r\n        this.tracksPage = null;\r\n    });\r\n  }\r\n}\r\n\r\nexport class Page {\r\n  totalHits: number;\r\n  records: Record[];\r\n\r\n  constructor(totalHits: number, records: Record[]){\r\n    this.totalHits = totalHits;\r\n    this.records = records;\r\n  }\r\n}\r\n\r\nexport class Record {\r\n  id: number;\r\n  trackName: string;\r\n  publishedAt: string;\r\n  trackUrl: string;\r\n  isOnFirstPage: boolean;\r\n\r\n  constructor(id: number, trackName: string, publishedAt: string, trackUrl: string, isOnFirstPage: boolean){\r\n    this.id = id;\r\n    this.trackName = trackName;\r\n    this.publishedAt = publishedAt;\r\n    this.trackUrl = trackUrl;\r\n    this.isOnFirstPage = isOnFirstPage;\r\n  }\r\n}","<div class=\"col mt-3\">\r\n    <div class=\"row\">\r\n      <form>\r\n        <div class=\"form-group\" [formGroup]=\"searchProfile\">\r\n          <label for=\"profile-search\">Ім'я користувача</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"profile-search\" placeholder=\"Наприклад, ToucanMusic\" formControlName=\"userName\" [autofocus] [(ngModel)]=\"usernameExists\">\r\n        </div>\r\n        <div class=\"form-group\" [formGroup]=\"searchProfile\">\r\n          <label for=\"parallel-dropdown\">Кількість одночасних запитів</label>\r\n          <div class=\"dropdown\" id=\"parallel-dropdown\">\r\n            <select class=\"form-control\" formControlName=\"itemsInParallel\">\r\n              <option *ngFor=\"let item of availableParallelizationItems\" \r\n                [selected]=\"item == 3\">{{item}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [formGroup]=\"searchProfile\">\r\n          <label for=\"items-per-page-dropdown\">Кількість треків на сторінці</label>\r\n          <div class=\"dropdown\" id=\"items-per-page-dropdown\">\r\n            <select class=\"form-control\" formControlName=\"itemsPerPage\">\r\n              <option *ngFor=\"let item of availableItemsPerPage\" \r\n                [selected]=\"item == 30\">{{item}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [formGroup]=\"searchProfile\">\r\n          <button \r\n              class=\"btn c-btn-input my-2 my-sm-0\" \r\n              (click)=\"getNextPageResults(1)\"\r\n              [disabled]=\"!usernameExists || usernameExists.trim().length <= 0\">Пошук</button>\r\n        </div>\r\n        <div *ngIf=\"errorMessage\" class=\"alert alert-danger row\" role=\"alert\">\r\n          {{errorMessage}}\r\n        </div>\r\n        <div *ngIf=\"infoMessage\" class=\"alert alert-warning row\" role=\"alert\">\r\n          {{infoMessage}}\r\n        </div>\r\n        <div *ngIf=\"isLoading\">\r\n          <p>Отримання даних. Це може зайняти декілька хвилин</p>\r\n          <p>Опрацьовано {{handledTracksCount}} із {{allTracksCount}}</p>\r\n          <div class=\"spinner\">\r\n            <div class=\"bounce1\"></div>\r\n            <div class=\"bounce2\"></div>\r\n            <div class=\"bounce3\"></div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n      \r\n    <div *ngIf=\"tracksPage\" class=\"mt-3\">\r\n\r\n      <table class='table table-striped' aria-labelledby=\"tableLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Трек</th>\r\n            <th>Лінк</th>\r\n            <th style=\"text-align: center\">На першій сторінці?</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let record of tracksPage.records\">\r\n            <td>\r\n              {{record.trackName}}\r\n            </td>\r\n            <td>\r\n              <a href=\"{{ record.trackUrl }}\" target=\"_blank\">{{record.trackUrl}}</a>\r\n            </td>\r\n            <td style=\"text-align: center\">\r\n              <i *ngIf=\"record.isOnFirstPage\" class=\"fa fa-check-circle itemsuccess\"></i>\r\n              <i *ngIf=\"!record.isOnFirstPage\" class=\"fa fa-times-circle itemfail\"></i>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>  \r\n      <ngb-pagination \r\n      [collectionSize]=\"totalTracksCount\" \r\n      [(page)]=\"currentPage\" \r\n      [pageSize]=\"pageSize\"\r\n      aria-label=\"Default pagination\"\r\n      [boundaryLinks]=\"true\"\r\n      [maxSize]=\"10\"\r\n      (pageChange)=\"getNextPageResults($event)\"></ngb-pagination> \r\n    </div>\r\n  </div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, Validators, AbstractControl, FormGroup } from '@angular/forms';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { TrackStatisticsSearchService, TrackSearchResponse, TracksPageResponse } from '../services/track-statistics-search.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  //@Output('userChange') userChangeEmitter: EventEmitter<Page> = new EventEmitter<Page>();\r\n\r\n  private userNameControl: AbstractControl;\r\n  public searchProfile: FormGroup;\r\n\r\n  public errorMessage: string;\r\n  public infoMessage: string;\r\n\r\n  public isLoading: boolean = false;\r\n\r\n  public allTracksCount: number = 0;\r\n  public handledTracksCount: number = 0;\r\n\r\n  public usernameExists: string;\r\n\r\n  constructor(\r\n    private trackStatisticsSearchService: TrackStatisticsSearchService,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.searchProfile = this.formBuilder.group({\r\n      userName: [null, [Validators.required, Validators.pattern('[^\\w]'), Validators.nullValidator]],\r\n    });\r\n\r\n    this.userNameControl =  this.searchProfile.get('userName');\r\n\r\n    this.errorMessage = \"\";\r\n    this.infoMessage = \"\";\r\n    this.allTracksCount = 0;\r\n    this.handledTracksCount = 0;\r\n  }\r\n\r\n  public composeResult(): void {\r\n    let userName = this.userNameControl.value;\r\n\r\n    this.allTracksCount = 0;\r\n    this.handledTracksCount = 0;\r\n    this.errorMessage = '';\r\n    this.infoMessage = '';\r\n    //this.userChangeEmitter.emit(null); \r\n    this.isLoading = true;\r\n\r\n    let pageNumber = 1;\r\n    let pageSize = 100;\r\n\r\n    //////////////////\r\n\r\n    // this.trackStatisticsSearchService.getTracksPage(userName, pageNumber, pageSize)\r\n    //   .pipe(mergeMap(page => {\r\n      \r\n    //     let records = forkJoin(page.matches.map(track => {\r\n\r\n    //       return this.trackStatisticsSearchService.searchProfile(track.name, 1, 30)\r\n    //       .pipe(map(r => {\r\n\r\n    //         let isOnFirstPage = r.matches.some(match => match.author_username == track.author_username && match.name == track.name);\r\n\r\n    //         return new Record(track.id, track.name, track.url, isOnFirstPage);\r\n    //       }));\r\n    //     }));\r\n\r\n    //     let a = records.pipe(map(tr => {\r\n\r\n    //       let links = new Links(page.links.next_page_url, page.links.prev_page_url, page.links.first_page_url, page.links.last_page_url);\r\n\r\n    //       return new Page(links, page.total_hits, tr);\r\n    //     }));\r\n\r\n    //     return a;\r\n    //   }))\r\n    //   .subscribe(result => {\r\n    //     this.isLoading = false;\r\n\r\n    //     result.records = result.records.sort((a, b) => a.trackName.localeCompare(b.trackName));\r\n\r\n    //     let notFirstPage = result.records.filter(rec => rec.isOnFirstPage == false);\r\n\r\n    //     let allTracksCount = result.records.length;\r\n    //     let nonTrendingTracksCount = notFirstPage.length;\r\n\r\n    //     if (allTracksCount != nonTrendingTracksCount)\r\n    //       this.infoMessage = `Showing ${nonTrendingTracksCount} of ${allTracksCount}`;\r\n  \r\n    //       result.records = notFirstPage;\r\n\r\n    //     this.userChangeEmitter.emit(result);\r\n    //   }, error => {\r\n\r\n    //     this.isLoading = false;\r\n\r\n    //     if (error.status == 404)\r\n    //       this.errorMessage = 'Сторінка не знайдена';\r\n  \r\n    //     if (error.status >= 400)\r\n    //       this.errorMessage = 'Щось пішло не так. Спробуйте пізніше';\r\n  \r\n    //     this.userChangeEmitter.emit(null);\r\n    // });\r\n\r\n////////////////////////////\r\n\r\n\r\n    // this.trackStatisticsSearchService.getTracksPage(userName, pageNumber, pageSize)\r\n    // .pipe(mergeMap(page => {\r\n    //   let pages : Observable<TracksPageResponse>[] = new Array<Observable<TracksPageResponse>>();\r\n    //   let totalPages = Math.ceil(page.total_hits / pageSize) + 1;\r\n\r\n    //   for (let p = pageNumber + 1; p < totalPages; p++){\r\n\r\n    //     let item = this.trackStatisticsSearchService.getTracksPage(userName, p, pageSize);\r\n    //     pages.push(item);\r\n    //   }\r\n\r\n    //   return forkJoin(pages).pipe(mergeMap(c => {\r\n    //     let matches = new Array<TrackSearchResponse>().concat(...c.concat(page).map(item => item.matches));\r\n\r\n    //     this.allTracksCount = matches.length;\r\n\r\n    //     let recordsObservables = matches.map(track => {\r\n\r\n    //       return this.trackStatisticsSearchService.searchProfile(track.name, 1, 30)\r\n    //       .pipe(map(r => {\r\n  \r\n    //         this.handledTracksCount++;\r\n\r\n    //         let isOnFirstPage = r.matches.some(match => match.author_username == track.author_username && match.name == track.name);\r\n  \r\n    //         return new Record(track.id, track.name, track.url, isOnFirstPage);\r\n    //       }));\r\n    //     });\r\n\r\n    //     let numberOfObjects = 1 // <-- decides number of objects in each group\r\n\r\n    //     let groupedProducts = recordsObservables.reduce((resultArray: Observable<Record>[][], item: Observable<Record>, index: number) => { \r\n    //       const chunkIndex = Math.floor(index/numberOfObjects);\r\n\r\n    //       if(!resultArray[chunkIndex]) {\r\n    //         resultArray[chunkIndex] = []; // start a new chunk\r\n    //       }\r\n\r\n    //       resultArray[chunkIndex].push(item);\r\n\r\n    //       return resultArray;\r\n    //     }, []);\r\n\r\n    //     let records = forkJoin(groupedProducts[0]);\r\n\r\n    //     for (let i = 1; i < groupedProducts.length; i++){\r\n    //       records = records.pipe(mergeMap(r => forkJoin(groupedProducts[i]).pipe(map(p => p.concat(r)))));\r\n    //     }\r\n\r\n    //     return records.pipe(map(tr => {\r\n    //         return new Page(null, 0, tr);\r\n    //     }));\r\n    //   }));\r\n    // }))\r\n    // .subscribe(result => {\r\n    //   this.isLoading = false;\r\n\r\n    //   result.records = result.records.sort((a, b) => a.trackName.localeCompare(b.trackName));\r\n\r\n    //   console.log(`Records count: ${result.records.length}`);\r\n\r\n    //   let allTracksCount = result.records.length;\r\n    //   let notFirstPage = result.records.filter(rec => rec.isOnFirstPage == false);\r\n\r\n    //   let nonTrendingTracksCount = notFirstPage.length;\r\n\r\n    //   if (allTracksCount != nonTrendingTracksCount)\r\n    //     this.infoMessage = `Всього треків: ${allTracksCount}. Не на першій сторінці пошуку: ${nonTrendingTracksCount}`;\r\n\r\n    //     result.records = notFirstPage;\r\n\r\n    //   this.userChangeEmitter.emit(result);\r\n    // }, error => {\r\n\r\n    //   this.isLoading = false;\r\n\r\n    //   if (error.status == 404)\r\n    //     this.errorMessage = 'Сторінка не знайдена';\r\n\r\n    //   if (error.status >= 400)\r\n    //     this.errorMessage = 'Щось пішло не так. Спробуйте пізніше';\r\n\r\n    //   this.userChangeEmitter.emit(null);\r\n    // });\r\n  }\r\n}\r\n\r\n// export class Page {\r\n//   links: Links;\r\n//   totalHits: number;\r\n//   records: Record[];\r\n\r\n//   constructor(links: Links, totalHits: number, records: Record[]){\r\n//     this.links = links;\r\n//     this.totalHits = totalHits;\r\n//     this.records = records;\r\n//   }\r\n// }\r\n\r\n// export class Record {\r\n//   id: number;\r\n//   trackName: string;\r\n//   trackUrl: string;\r\n//   isOnFirstPage: boolean;\r\n\r\n//   constructor(id: number,trackName: string, trackUrl: string, isOnFirstPage: boolean){\r\n//     this.id = id;\r\n//     this.trackName = trackName;\r\n//     this.trackUrl = trackUrl;\r\n//     this.isOnFirstPage = isOnFirstPage;\r\n//   }\r\n// }\r\n\r\n// export class Links {\r\n//   next_page_url: string;\r\n//   prev_page_url: string;\r\n//   first_page_url: string;\r\n//   last_page_url: string;\r\n\r\n//   constructor(next_page_url: string, prev_page_url: string, first_page_url: string, last_page_url: string){\r\n//     this.next_page_url = next_page_url;\r\n//     this.prev_page_url = prev_page_url;\r\n//     this.first_page_url = first_page_url;\r\n//     this.last_page_url = last_page_url;\r\n//   }\r\n// }\r\n","<form>\r\n  <div class=\"form-group\" [formGroup]=\"searchProfile\">\r\n    <label for=\"profile-search\">Ім'я користувача</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"profile-search\" placeholder=\"Наприклад, ToucanMusic\" formControlName=\"userName\" [autofocus] [(ngModel)]=\"usernameExists\">\r\n  </div>\r\n  <div class=\"form-group\" [formGroup]=\"searchProfile\">\r\n    <button \r\n        class=\"btn c-btn-input my-2 my-sm-0\" \r\n        (click)=\"composeResult()\"\r\n        [disabled]=\"!usernameExists || usernameExists.trim().length <= 0\">Пошук</button>\r\n  </div>\r\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger row\" role=\"alert\">\r\n    {{errorMessage}}\r\n  </div>\r\n  <div *ngIf=\"infoMessage\" class=\"alert alert-warning row\" role=\"alert\">\r\n    {{infoMessage}}\r\n  </div>\r\n  <div *ngIf=\"isLoading\">\r\n    <p>Отримання даних. Це може зайняти декілька хвилин</p>\r\n    <p>Опрацьовано {{handledTracksCount}} із {{allTracksCount}}</p>\r\n    <div class=\"spinner\">\r\n      <div class=\"bounce1\"></div>\r\n      <div class=\"bounce2\"></div>\r\n      <div class=\"bounce3\"></div>\r\n    </div>\r\n  </div>\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class TrackStatisticsSearchService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n    ) {\r\n    }\r\n\r\n    public getTracksPage(username: string, pageNumber: number, pageSize: number): Observable<TracksPageResponse> {\r\n        let url = `https://api.envato.com/v1/discovery/search/search/item?username=${username}&page=${pageNumber}&page_size=${pageSize}&sort_by=date&sort_direction=desc`;\r\n\r\n        let headers = {\r\n            'Authorization': `Bearer ${environment.ENVATO_KEY}`\r\n        };\r\n\r\n        return this.httpClient.get<TracksPageResponse>(url, {headers: headers});\r\n    }\r\n\r\n    public getTrackNames(username: string) : Observable<TrackSearchResponse[]> {\r\n        let url = `https://api.envato.com/v1/discovery/search/search/item?username=${username}`;\r\n\r\n        let headers = {\r\n            'Authorization': `Bearer ${environment.ENVATO_KEY}`\r\n        };\r\n\r\n        return this.httpClient.get<TrackSearchResponse[]>(url, {headers: headers})\r\n            .pipe(\r\n                map((response: any) => {\r\n                    return response.matches.map(match => new TrackSearchResponse(match.id, match.name, match.published_at, match.url, match.author_username));\r\n                }));\r\n    }\r\n\r\n    public getTotalMatches(term: string) : Observable<TotalMatchesResponse> {\r\n        var url = `https://cors-anywhere.herokuapp.com/https://audiojungle.net/shopfront-api/search?page=1&page_size=1&site=audiojungle.net&sort_by=relevance&term=${term}`;\r\n    \r\n        return this.httpClient.get<TotalMatchesResponse>(url);\r\n    }\r\n\r\n    public searchProfile(term: string, pageNumber: number, pageSize: number) : Observable<TermSearchResult> {\r\n    \r\n        var url = `https://api.envato.com/v1/discovery/search/search/item?page=${pageNumber}&page_size=${pageSize}&site=audiojungle.net&sort_by=relevance`;\r\n    \r\n        let params = new HttpParams();\r\n\r\n        if (term) {\r\n            params = params.append('term', term);\r\n        }\r\n\r\n        let headers = {\r\n            'Authorization': `Bearer ${environment.ENVATO_KEY}`\r\n        };\r\n\r\n        return this.httpClient.get<TermSearchResult>(url, { params: params, headers: headers });\r\n    }\r\n}\r\n\r\nexport class TracksPageResponse {\r\n    matches: TrackSearchResponse[];\r\n    total_hits: number;\r\n    links: TracksPageLinksResponse;\r\n}\r\n\r\nexport class TracksPageLinksResponse{\r\n    next_page_url: string;\r\n    prev_page_url: string;\r\n    first_page_url: string;\r\n    last_page_url: string;\r\n}\r\n\r\nexport class TrackSearchResponse{\r\n    id: number;\r\n    name: string;\r\n    published_at: string;\r\n    url: string;\r\n    author_username: string;\r\n\r\n    constructor(id: number, name: string, published_at: string, url: string, author: string){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.published_at = published_at;\r\n        this.url = url;\r\n        this.author_username = author;\r\n    }\r\n}\r\n\r\nexport class TotalMatchesResponse {\r\n    total_hits: number;\r\n}\r\n\r\nexport class TermSearchResult{\r\n    total_hits: number;\r\n    matches: TrackSearchResult[];\r\n}\r\n\r\nexport class TrackSearchResult{\r\n    id: number;\r\n    author_url: string;\r\n    author_username: string;\r\n    url: string;\r\n    trending: boolean;\r\n    classification: string;\r\n    description: string;\r\n    name: string;\r\n    number_of_sales: number;\r\n    price_cents: number;\r\n    tags: string[];\r\n}","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TrackStatisticsSearchService, TrackSearchResponse } from '../services/track-statistics-search.service';\r\n\r\n@Component({\r\n  selector: 'app-track-info',\r\n  templateUrl: './track-info.component.html',\r\n  styleUrls: ['./track-info.component.scss']\r\n})\r\nexport class TrackInfoComponent implements OnInit {\r\n\r\n  @Input() record: TrackSearchResponse;\r\n\r\n  public isOnFirstPage: boolean;\r\n\r\n  public errorMessage: string = '';\r\n\r\n  constructor(\r\n    private trackStatisticsSearchService: TrackStatisticsSearchService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    let pageNumber = 1;\r\n    let pageSize = 30;\r\n\r\n    this.trackStatisticsSearchService.searchProfile(this.record.name, pageNumber, pageSize).subscribe(result => {\r\n      this.isOnFirstPage = result.matches.some(x => x.author_username == this.record.author_username && x.name == this.record.name);\r\n    }, error => {\r\n      this.errorMessage = error.error;\r\n    });\r\n  }\r\n}\r\n","<td>\r\n  {{record.name}}\r\n</td>\r\n<td>\r\n  <a href=\"{{ record.url }}\" target=\"_blank\">{{record.url}}</a>\r\n</td>\r\n<td>{{isOnFirstPage}}</td>","\nexport const environment = {\n   production: false,\n   ENVATO_KEY: \"haJXHoYnavl4EZ31RVAjJPuGZ7sxvBeO\"\n};\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}